Index: src/main/java/group3/mindfactory_administration/model/CalendarBooking.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package group3.mindfactory_administration.model;\r\n\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.input.ClipboardContent;\r\nimport javafx.scene.input.Dragboard;\r\nimport javafx.scene.input.TransferMode;\r\nimport javafx.scene.layout.HBox;\r\n\r\npublic class CalendarBooking extends HBox {\r\n\r\n    private final String name;\r\n\r\n    public CalendarBooking(String name) {\r\n        this.name = name;\r\n\r\n        // Styling\r\n        setPrefHeight(15);\r\n        setPrefWidth(USE_COMPUTED_SIZE);\r\n        setStyle(\"-fx-background-color: #0051ff; -fx-background-radius: 5px; -fx-border-radius: 5px; -fx-border-color: #0051ff; -fx-border-width: 1px; -fx-padding: 2px 5px 2px 5px;\");\r\n\r\n        // Temporary code\r\n        Label eventName = new Label(name + \" \");\r\n        eventName.setStyle(\"-fx-text-fill: #ffffff\");\r\n        eventName.setMouseTransparent(true);\r\n\r\n        getChildren().add(eventName);\r\n\r\n        // Starts the drag and drop process\r\n        setOnDragDetected(e -> {\r\n            Dragboard db = startDragAndDrop(TransferMode.ANY);\r\n\r\n            // Generated with GitHub Copilot\r\n            ClipboardContent content = new ClipboardContent();\r\n            content.putString(name);\r\n            db.setContent(content);\r\n\r\n            e.consume();\r\n        });\r\n\r\n        // Removes the event from the cell when it is dragged out\r\n        setOnDragDone(e -> {\r\n            if (e.getTransferMode() == TransferMode.MOVE) {\r\n                // Needed a way to access the CalendarCell from the CalendarEvent so that it can delete itself\r\n                CalendarCell cell = (CalendarCell) getParent();\r\n                cell.getChildren().remove(this);\r\n            }\r\n            e.consume();\r\n        });\r\n    }\r\n\r\n    public void setClicked(boolean clicked) {\r\n        if (clicked)\r\n            setStyle(\"-fx-background-color: #0051ff; -fx-background-radius: 5px; -fx-border-radius: 5px; -fx-border-color: #000000; -fx-border-width: 1px; -fx-padding: 2px 5px 2px 5px;\");\r\n        else\r\n            setStyle(\"-fx-background-color: #0051ff; -fx-background-radius: 5px; -fx-border-radius: 5px; -fx-border-color: #0051ff; -fx-border-width: 1px; -fx-padding: 2px 5px 2px 5px;\");\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return name;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/group3/mindfactory_administration/model/CalendarBooking.java b/src/main/java/group3/mindfactory_administration/model/CalendarBooking.java
--- a/src/main/java/group3/mindfactory_administration/model/CalendarBooking.java	(revision 5737d2496cd27734c59449053499ac50063d6e7a)
+++ b/src/main/java/group3/mindfactory_administration/model/CalendarBooking.java	(date 1683876609793)
@@ -8,10 +8,10 @@
 
 public class CalendarBooking extends HBox {
 
-    private final String name;
+    private final Booking booking;
 
-    public CalendarBooking(String name) {
-        this.name = name;
+    public CalendarBooking(Booking booking) {
+        this.booking = booking;
 
         // Styling
         setPrefHeight(15);
@@ -19,14 +19,14 @@
         setStyle("-fx-background-color: #0051ff; -fx-background-radius: 5px; -fx-border-radius: 5px; -fx-border-color: #0051ff; -fx-border-width: 1px; -fx-padding: 2px 5px 2px 5px;");
 
         // Temporary code
-        Label eventName = new Label(name + " ");
+        Label eventName = new Label(booking.getOrganization() + " ");
         eventName.setStyle("-fx-text-fill: #ffffff");
         eventName.setMouseTransparent(true);
 
         getChildren().add(eventName);
 
         // Starts the drag and drop process
-        setOnDragDetected(e -> {
+        /*setOnDragDetected(e -> {
             Dragboard db = startDragAndDrop(TransferMode.ANY);
 
             // Generated with GitHub Copilot
@@ -45,7 +45,7 @@
                 cell.getChildren().remove(this);
             }
             e.consume();
-        });
+        });*/
     }
 
     public void setClicked(boolean clicked) {
@@ -57,6 +57,6 @@
 
     @Override
     public String toString() {
-        return name;
+        return booking.getOrganization() + " " + booking.getStartTime() + " - " + booking.getEndTime();
     }
 }
Index: src/main/java/module-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>module group3.mindfactory_administration {\r\n    requires javafx.controls;\r\n    requires javafx.fxml;\r\n    requires MaterialFX;\r\n    requires com.microsoft.sqlserver.jdbc;\r\n    requires java.sql;\r\n    requires java.naming;\r\n    requires java.mail;\r\n    requires java.desktop;\r\n\r\n\r\n    opens group3.mindfactory_administration to javafx.fxml;\r\n    exports group3.mindfactory_administration;\r\n    exports group3.mindfactory_administration.controllers;\r\n    opens group3.mindfactory_administration.controllers to javafx.fxml;\r\n    exports group3.mindfactory_administration.dao;\r\n    opens group3.mindfactory_administration.dao to javafx.fxml;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/module-info.java b/src/main/java/module-info.java
--- a/src/main/java/module-info.java	(revision 5737d2496cd27734c59449053499ac50063d6e7a)
+++ b/src/main/java/module-info.java	(date 1683882561244)
@@ -15,4 +15,6 @@
     opens group3.mindfactory_administration.controllers to javafx.fxml;
     exports group3.mindfactory_administration.dao;
     opens group3.mindfactory_administration.dao to javafx.fxml;
+    exports group3.mindfactory_administration.model;
+    opens group3.mindfactory_administration.model to javafx.fxml;
 }
\ No newline at end of file
Index: src/main/java/group3/mindfactory_administration/dao/BookingDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package group3.mindfactory_administration.dao;\r\n\r\nimport group3.mindfactory_administration.model.Booking;\r\nimport group3.mindfactory_administration.model.BookingTime;\r\n\r\nimport java.sql.SQLException;\r\n\r\npublic interface BookingDao {\r\n\r\n    void editBooking (Booking booking) throws SQLException;\r\n\r\n    void deleteBooking (int bookingID);\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/group3/mindfactory_administration/dao/BookingDao.java b/src/main/java/group3/mindfactory_administration/dao/BookingDao.java
--- a/src/main/java/group3/mindfactory_administration/dao/BookingDao.java	(revision 5737d2496cd27734c59449053499ac50063d6e7a)
+++ b/src/main/java/group3/mindfactory_administration/dao/BookingDao.java	(date 1683882561261)
@@ -4,11 +4,18 @@
 import group3.mindfactory_administration.model.BookingTime;
 
 import java.sql.SQLException;
+import java.util.HashMap;
+import java.util.List;
 
 public interface BookingDao {
 
+    List<Booking> getAllBookings();
+    HashMap<String, Integer> countBookingsByOrg();
+
+    HashMap<String, Integer> countBookingsByActivity();
+
     void editBooking (Booking booking) throws SQLException;
 
-    void deleteBooking (int bookingID);
+    void deleteBooking (int bookingID) throws SQLException;
 
 }
Index: src/main/java/group3/mindfactory_administration/model/Tasks/EditBookingTask.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package group3.mindfactory_administration.model.Tasks;\r\n\r\n\r\nimport group3.mindfactory_administration.dao.BookingDao;\r\nimport group3.mindfactory_administration.dao.BookingDaoImpl;\r\nimport group3.mindfactory_administration.model.Booking;\r\nimport javafx.concurrent.Task;\r\n\r\nimport java.awt.print.Book;\r\n\r\npublic class EditBookingTask extends Task<Boolean> {\r\n\r\n    private final BookingDao bookingDao;\r\n\r\n    private final Booking booking;\r\n\r\n    public EditBookingTask(Booking booking) {\r\n        this.booking = booking;\r\n        bookingDao = new BookingDaoImpl();\r\n    }\r\n\r\n    @Override\r\n    protected Boolean call() throws Exception {\r\n        boolean success = true;\r\n\r\n        try {\r\n            bookingDao.editBooking(booking);\r\n        } catch (RuntimeException e) {\r\n            success = false;\r\n        }\r\n\r\n        return success;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/group3/mindfactory_administration/model/Tasks/EditBookingTask.java b/src/main/java/group3/mindfactory_administration/model/Tasks/EditBookingTask.java
--- a/src/main/java/group3/mindfactory_administration/model/Tasks/EditBookingTask.java	(revision 5737d2496cd27734c59449053499ac50063d6e7a)
+++ b/src/main/java/group3/mindfactory_administration/model/Tasks/EditBookingTask.java	(date 1683876733471)
@@ -6,8 +6,6 @@
 import group3.mindfactory_administration.model.Booking;
 import javafx.concurrent.Task;
 
-import java.awt.print.Book;
-
 public class EditBookingTask extends Task<Boolean> {
 
     private final BookingDao bookingDao;
Index: src/main/java/group3/mindfactory_administration/dao/BookingDaoImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package group3.mindfactory_administration.dao;\r\n\r\nimport group3.mindfactory_administration.model.Booking;\r\nimport group3.mindfactory_administration.model.BookingTime;\r\n\r\nimport java.sql.*;\r\n\r\npublic class BookingDaoImpl implements BookingDao {\r\n\r\n    private final DatabaseConnector databaseConnector;\r\n\r\n    public BookingDaoImpl() {\r\n        databaseConnector = DatabaseConnector.getInstance();\r\n    }\r\n\r\n    @Override\r\n    public void editBooking(Booking booking) throws SQLException {\r\n        Connection con = databaseConnector.getConnection();\r\n        try {\r\n            con.setAutoCommit(false);\r\n            PreparedStatement ps = con.prepareStatement(\"UPDATE Booking SET Catering = ?, Activity = ?, Organization = ?, ÅbenSkoleForløb = ?,FirstName = ?, LastName = ?, Position = ?, Afdeling = ?, Phone = ?, Email = ?,Assistance = ?, TransportType = ?, TransportArrival = ?,TransportDeparture = ?, Participants = ?, BookingDateTime = ?, MessageToAS = ?, PersonalNote = ?, BookingType = ? WHERE bookingID = ?);\");\r\n\r\n            ps.setString(1, booking.getBookingType());\r\n            ps.setString(2, booking.getCatering());\r\n            ps.setString(3, booking.getActivity());\r\n            ps.setString(4, booking.getOrganization());\r\n            ps.setString(5, booking.getÅbenSkoleForløb());\r\n            ps.setString(6, booking.getFirstName());\r\n            ps.setString(7, booking.getLastName());\r\n            ps.setString(8, booking.getPosition());\r\n            ps.setString(9, booking.getAfdeling());\r\n            ps.setString(10, booking.getPhone());\r\n            ps.setString(11, booking.getEmail());\r\n            ps.setString(12, booking.getAssistance());\r\n            ps.setString(13, booking.getTransportType());\r\n            ps.setString(14, booking.getTransportArrival());\r\n            ps.setString(15, booking.getTransportDeparture());\r\n            ps.setInt(16, booking.getParticipants());\r\n            ps.setTimestamp(17, Timestamp.valueOf(booking.getBookingDateTime()));\r\n            ps.setDate(18, Date.valueOf(Booking.getInstance().getStartDate()));\r\n            ps.setTime(19, Time.valueOf(Booking.getInstance().getStartTime()));\r\n            ps.setTime(20, Time.valueOf(Booking.getInstance().getEndTime()));\r\n            ps.setBoolean(21, Booking.getInstance().isWholeDay());\r\n            ps.setBoolean(22, Booking.getInstance().isHalfDayEarly());\r\n            ps.setBoolean(23, Booking.getInstance().isNoShow());\r\n            ps.setString(24, booking.getMessageToAS());\r\n            ps.setString(25, booking.getPersonalNote());\r\n            ps.setInt(26, booking.getBookingID());\r\n            ps.executeUpdate();\r\n\r\n            con.setTransactionIsolation(Connection.TRANSACTION_SERIALIZABLE);\r\n            con.commit();\r\n            con.setAutoCommit(true);\r\n\r\n        } catch (SQLException e) {\r\n            con.rollback();\r\n            throw new SQLException(e);\r\n        } finally {\r\n            con.close();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void deleteBooking(int bookingID) {\r\n        int rowsAffected;\r\n        try (Connection con = databaseConnector.getConnection()) {\r\n            PreparedStatement ps = con.prepareStatement(\"DELETE FROM Booking WHERE BookingID = ?\");\r\n            ps.setInt(1, bookingID);\r\n            rowsAffected = ps.executeUpdate(); // https://stackoverflow.com/questions/2571915/return-number-of-rows-affected-by-sql-update-statement-in-java\r\n\r\n            if (rowsAffected == 0) {\r\n                throw new RuntimeException(\"Booking with ID \" + bookingID + \" does not exist\");\r\n            }\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/group3/mindfactory_administration/dao/BookingDaoImpl.java b/src/main/java/group3/mindfactory_administration/dao/BookingDaoImpl.java
--- a/src/main/java/group3/mindfactory_administration/dao/BookingDaoImpl.java	(revision 5737d2496cd27734c59449053499ac50063d6e7a)
+++ b/src/main/java/group3/mindfactory_administration/dao/BookingDaoImpl.java	(date 1683882561253)
@@ -1,9 +1,12 @@
 package group3.mindfactory_administration.dao;
 
 import group3.mindfactory_administration.model.Booking;
-import group3.mindfactory_administration.model.BookingTime;
 
 import java.sql.*;
+import java.time.LocalDate;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
 
 public class BookingDaoImpl implements BookingDao {
 
@@ -13,6 +16,78 @@
         databaseConnector = DatabaseConnector.getInstance();
     }
 
+    @Override
+    public List<Booking> getAllBookings() {
+        List<Booking> bookings = new ArrayList<>();
+        try (Connection con = databaseConnector.getConnection()){
+            PreparedStatement ps = con.prepareStatement(
+                    "SELECT * FROM Booking;"
+            );
+
+            ResultSet rs = ps.executeQuery();
+            while (rs.next()) {
+                int bookingID = rs.getInt(1);
+                String organization = rs.getString(2);
+                String activity = rs.getString(3);
+                LocalDate date = rs.getDate(4).toLocalDate();
+                String time = rs.getString(5);
+                String email = rs.getString(6);
+                String phone = rs.getString(7);
+                String comment = rs.getString(8);
+                bookings.add(new Booking(bookingID, organization, activity, date, time, email, phone, comment));
+            }
+
+        } catch (SQLException e) {
+            System.err.println(e.getMessage());
+        }
+
+        return bookings;
+    }
+
+    @Override
+    public HashMap<String, Integer> countBookingsByOrg() {
+        HashMap<String, Integer> bookingsGroupedByOrg = new HashMap<>();
+        try (Connection con = databaseConnector.getConnection()){
+            PreparedStatement ps = con.prepareStatement(
+                    "SELECT organization, COUNT(*) AS 'Belægning' " +
+                    "FROM Booking GROUP BY Organization;"
+            );
+            ResultSet rs = ps.executeQuery();
+            while (rs.next()) {
+                String organization = rs.getString(1);
+                int belægning = rs.getInt(2);
+                bookingsGroupedByOrg.put(organization, belægning);
+            }
+
+        } catch (SQLException e) {
+            System.err.println(e.getMessage());
+        }
+
+        return bookingsGroupedByOrg;
+    }
+
+    @Override
+    public HashMap<String, Integer> countBookingsByActivity() {
+        HashMap<String, Integer> bookingsGroupedByActivities = new HashMap<>();
+        try (Connection con = databaseConnector.getConnection()){
+            PreparedStatement ps = con.prepareStatement(
+                    "SELECT activity, COUNT(*) AS 'Belægning' " +
+                            "FROM Booking GROUP BY activity;"
+            );
+            ResultSet rs = ps.executeQuery();
+            while (rs.next()) {
+                String activity = rs.getString(1);
+                int belægning = rs.getInt(2);
+                bookingsGroupedByActivities.put(activity, belægning);
+            }
+
+        } catch (SQLException e) {
+            System.err.println(e.getMessage());
+        }
+
+        return bookingsGroupedByActivities;
+    }
+
     @Override
     public void editBooking(Booking booking) throws SQLException {
         Connection con = databaseConnector.getConnection();
@@ -61,7 +136,7 @@
     }
 
     @Override
-    public void deleteBooking(int bookingID) {
+    public void deleteBooking(int bookingID) throws SQLException {
         int rowsAffected;
         try (Connection con = databaseConnector.getConnection()) {
             PreparedStatement ps = con.prepareStatement("DELETE FROM Booking WHERE BookingID = ?");
@@ -69,12 +144,20 @@
             rowsAffected = ps.executeUpdate(); // https://stackoverflow.com/questions/2571915/return-number-of-rows-affected-by-sql-update-statement-in-java
 
             if (rowsAffected == 0) {
-                throw new RuntimeException("Booking with ID " + bookingID + " does not exist");
+                throw new SQLException("Booking with ID " + bookingID + " does not exist");
             }
         } catch (SQLException e) {
-            throw new RuntimeException(e);
+            throw new SQLException(e);
         }
     }
+
+    public static void main(String[] args) {
+        BookingDaoImpl bookingDao = new BookingDaoImpl();
+        HashMap<String, Integer> bookingsGroupedByOrg = bookingDao.getBookingsGroupedByOrg();
+        HashMap<String, Integer> bookingsGroupedByActivities = bookingDao.getBookingsGroupedByActivities();
+        System.out.println(bookingsGroupedByOrg);
+        System.out.println(bookingsGroupedByActivities);
+    }
 }
 
 
Index: src/main/java/group3/mindfactory_administration/model/Notification.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package group3.mindfactory_administration.model;\r\n\r\nimport io.github.palexdev.materialfx.controls.MFXSimpleNotification;\r\n\r\npublic class Notification extends MFXSimpleNotification {\r\n\r\n    public Notification(String title, String message) {\r\n        CalendarBooking calendarBooking = new CalendarBooking(title);\r\n        setContent(calendarBooking);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/group3/mindfactory_administration/model/Notification.java b/src/main/java/group3/mindfactory_administration/model/Notification.java
--- a/src/main/java/group3/mindfactory_administration/model/Notification.java	(revision 5737d2496cd27734c59449053499ac50063d6e7a)
+++ b/src/main/java/group3/mindfactory_administration/model/Notification.java	(date 1683882342107)
@@ -5,8 +5,7 @@
 public class Notification extends MFXSimpleNotification {
 
     public Notification(String title, String message) {
-        CalendarBooking calendarBooking = new CalendarBooking(title);
-        setContent(calendarBooking);
+
     }
 
 }
Index: src/main/java/group3/mindfactory_administration/model/CalendarCell.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package group3.mindfactory_administration.model;\r\n\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.input.Dragboard;\r\nimport javafx.scene.input.TransferMode;\r\nimport javafx.scene.layout.VBox;\r\n\r\nimport java.time.LocalDate;\r\n\r\npublic class CalendarCell extends VBox{\r\n\r\n    private final String dayOfMonth;\r\n\r\n    public CalendarCell(LocalDate date) {\r\n        dayOfMonth = String.valueOf(date.getDayOfMonth());\r\n        // Styling\r\n        setAlignment(Pos.TOP_LEFT);\r\n        setSpacing(4);\r\n        setPadding(new Insets(4, 4, 4, 4));\r\n        if (date.isEqual(LocalDate.now())) {\r\n            setStyle(\"-fx-border-color: #0095ff; -fx-border-width: 1px; -fx-background-color: #dbefff;\");\r\n        } else {\r\n            setStyle(\"-fx-border-color: #dedede; -fx-border-width: 1px; -fx-background-color: white;\");\r\n        }\r\n\r\n        // Add the day of the month to the cell\r\n        Label label = new Label(dayOfMonth);\r\n        label.setMouseTransparent(true);\r\n        getChildren().add(label);\r\n\r\n        setOnDragOver(e -> {\r\n            if (e.getGestureSource() != this && e.getDragboard().hasString()) {\r\n                e.acceptTransferModes(TransferMode.MOVE);\r\n            }\r\n            e.consume();\r\n        });\r\n\r\n        // Adds the event to the cell when it is dropped\r\n        setOnDragDropped(e -> {\r\n            Dragboard db = e.getDragboard();\r\n            // Generated with GitHub Copilot\r\n            boolean success = false;\r\n            if (db.hasString()) {\r\n                getChildren().add(new CalendarBooking(db.getString()));\r\n                success = true;\r\n            }\r\n            e.setDropCompleted(success);\r\n            e.consume();\r\n        });\r\n\r\n        CalendarBooking booking = new CalendarBooking(\"Event\");\r\n\r\n        getChildren().add(booking);\r\n\r\n        // Pseudocode for actually loading events from database\r\n        // List<CalendarEvent> events = getEventsFromDatabase();\r\n        // for (CalendarEvent event : events) {\r\n        //     if (event.getStartTime().toLocalDate().isEqual(date)) {\r\n        //         getChildren().add(event);\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return dayOfMonth;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/group3/mindfactory_administration/model/CalendarCell.java b/src/main/java/group3/mindfactory_administration/model/CalendarCell.java
--- a/src/main/java/group3/mindfactory_administration/model/CalendarCell.java	(revision 5737d2496cd27734c59449053499ac50063d6e7a)
+++ b/src/main/java/group3/mindfactory_administration/model/CalendarCell.java	(date 1683882328126)
@@ -8,12 +8,13 @@
 import javafx.scene.layout.VBox;
 
 import java.time.LocalDate;
+import java.util.List;
 
 public class CalendarCell extends VBox{
 
     private final String dayOfMonth;
 
-    public CalendarCell(LocalDate date) {
+    public CalendarCell(LocalDate date, List<Booking> bookings) {
         dayOfMonth = String.valueOf(date.getDayOfMonth());
         // Styling
         setAlignment(Pos.TOP_LEFT);
@@ -30,6 +31,7 @@
         label.setMouseTransparent(true);
         getChildren().add(label);
 
+        /*
         setOnDragOver(e -> {
             if (e.getGestureSource() != this && e.getDragboard().hasString()) {
                 e.acceptTransferModes(TransferMode.MOVE);
@@ -49,10 +51,7 @@
             e.setDropCompleted(success);
             e.consume();
         });
-
-        CalendarBooking booking = new CalendarBooking("Event");
-
-        getChildren().add(booking);
+        */
 
         // Pseudocode for actually loading events from database
         // List<CalendarEvent> events = getEventsFromDatabase();
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"d5b9a90c-3b0c-418f-8a98-ea0a9d178916\" name=\"Changes\" comment=\"Changes\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/group3/mindfactory_administration/model/Tasks/EditBookingTask.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_10_05_23_15_01__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_10_05_23_15_01__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/group3/mindfactory_administration/dao/BookingDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/group3/mindfactory_administration/dao/BookingDao.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/group3/mindfactory_administration/dao/BookingDaoImpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/group3/mindfactory_administration/dao/BookingDaoImpl.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/group3/mindfactory_administration/model/Booking.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/group3/mindfactory_administration/model/Booking.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/module-info.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/module-info.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2PHHxJrKh7hC68fL7QjuTMr4ReC\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;true&quot;,\r\n    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;dart.analysis.tool.window.visible&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;openjdk-19&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/chris/IdeaProjects/MindFactory_Administration/lib&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.537931&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\chris\\IdeaProjects\\MindFactory_Administration\\src\\main\\java\\group3\\mindfactory_administration\\dao\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"group3.mindfactory_administration\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"group3.mindfactory_administration.dao\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Run application\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"group3.mindfactory_administration.AdministrationApplication\" />\r\n      <module name=\"MindFactory_Administration\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"d5b9a90c-3b0c-418f-8a98-ea0a9d178916\" name=\"Changes\" comment=\"\" />\r\n      <created>1683107331952</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1683107331952</updated>\r\n      <workItem from=\"1683107332942\" duration=\"1688000\" />\r\n      <workItem from=\"1683189010972\" duration=\"852000\" />\r\n      <workItem from=\"1683189870702\" duration=\"2598000\" />\r\n      <workItem from=\"1683538754514\" duration=\"2562000\" />\r\n      <workItem from=\"1683555825219\" duration=\"2972000\" />\r\n      <workItem from=\"1683564029837\" duration=\"3241000\" />\r\n      <workItem from=\"1683708052392\" duration=\"2089000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Changes\">\r\n      <created>1683555912951</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683555912951</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Changes\">\r\n      <created>1683559513657</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683559513657</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Changes\">\r\n      <created>1683567604792</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683567604792</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Changes\">\r\n      <created>1683709678357</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683709678357</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Changes\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Changes\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 5737d2496cd27734c59449053499ac50063d6e7a)
+++ b/.idea/workspace.xml	(date 1683877151734)
@@ -5,13 +5,13 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="d5b9a90c-3b0c-418f-8a98-ea0a9d178916" name="Changes" comment="Changes">
-      <change afterPath="$PROJECT_DIR$/src/main/java/group3/mindfactory_administration/model/Tasks/EditBookingTask.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_10_05_23_15_01__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_10_05_23_15_01__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/group3/mindfactory_administration/dao/BookingDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/group3/mindfactory_administration/dao/BookingDao.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/group3/mindfactory_administration/dao/BookingDaoImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/group3/mindfactory_administration/dao/BookingDaoImpl.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/group3/mindfactory_administration/model/Booking.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/group3/mindfactory_administration/model/Booking.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/module-info.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/module-info.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/group3/mindfactory_administration/model/CalendarBooking.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/group3/mindfactory_administration/model/CalendarBooking.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/group3/mindfactory_administration/model/CalendarCell.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/group3/mindfactory_administration/model/CalendarCell.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/group3/mindfactory_administration/model/Tasks/EditBookingTask.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/group3/mindfactory_administration/model/Tasks/EditBookingTask.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
